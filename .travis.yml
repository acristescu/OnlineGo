language: android

android:
  components:
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_API

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-$ANDROID_API

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-26

  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+

env:
  matrix:
    - ANDROID_BUILD_TOOLS=27.0.3 ANDROID_API=27

before_install:
  - openssl aes-256-cbc -K $encrypted_2b92f0f45fe9_key -iv $encrypted_2b92f0f45fe9_iv -in app/google-services.json.enc -out app/google-services.json -d
  - yes | sdkmanager "platforms;android-$ANDROID_API"
  - chmod +x gradlew

install:
  # Install dependencies to compile native C++ code
  - yes | sdkmanager "ndk-bundle"
  - yes | sdkmanager "cmake;3.6.4111459"
  - yes | sdkmanager "lldb;3.1"

# Create virtual device(s)
before_script:
  - echo no | android create avd --force -n test -t android-27 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - ./gradlew --version

  # Build the application
  - ./gradlew build

  # Run tests.
  - ./gradlew test

  # Install on virtual device(s).
  #- ./gradlew installDebugAndroidTest

  # Run tests on virtual devices.
  # - ./gradlew connectedAndroidTest

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache